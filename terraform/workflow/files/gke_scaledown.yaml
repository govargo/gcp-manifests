main:
  steps:
  - prallel_scale_down:
      parallel:
        branches:
        - app_0:
            steps:
            - app_0_scale_down:
                call: prod_app_0_scaledown
                result: app_0_scale_down
        - app_1:
            steps:
            - app_1_scale_down:
                call: prod_app_1_scaledown
                result: app_1_scale_down
        - corp_0:
            steps:
            - corp_0_scale_down:
                call: prod_corp_0_scaledown
                result: corp_0_scale_down
        - misc_0:
            steps:
            - misc_0_scale_down:
                call: prod_misc_0_scaledown
                result: misc_0_scale_down

prod_app_0_scaledown:
  params:
    - project_id: prd-little-quest
    - region: "asia-northeast1"
    - cluster_id: "prod-app-0"
    - scale_down_size: 0
  steps:
  - disable_autoscaling_loop:
      for:
        value: node_pool_value
        in: ["app-pool", "kube-system-pool"]
        steps:
        - disable_autoscaling:
            call: googleapis.container.v1.projects.locations.clusters.nodePools.setAutoscaling
            args:
              name: $${"projects/"+project_id+"/locations/"+region+"/clusters/"+cluster_id+"/nodePools/"+node_pool_value}
              body:
                autoscaling:
                  enabled: false
            result: disable_autoscaling
  - wait:
      call: sys.sleep
      args:
        seconds: 180
  - scale_down_workload_little_quest_server:
      call: gke.request
      args:
        project: $${project_id}
        location: $${region}
        cluster_id: $${cluster_id}
        method: "PATCH"
        path: "/apis/apps/v1/namespaces/little-quest-server/deployments/little-quest-server/scale"
        headers:
          Content-Type: application/strategic-merge-patch+json
        body:
          spec:
            replicas: $${scale_down_size}
      result: scale_down_workload_little_quest_server
  - scale_down_workload_otel_collector:
      call: gke.request
      args:
        project: $${project_id}
        location: $${region}
        cluster_id: $${cluster_id}
        method: "PATCH"
        path: "/apis/apps/v1/namespaces/tracing/deployments/opentelemetry-collector/scale"
        headers:
          Content-Type: application/strategic-merge-patch+json
        body:
          spec:
            replicas: $${scale_down_size}
      result: scale_down_workload_otel_collector
  - scale_down_node_pool_loop:
      for:
        value: node_pool_value
        in: ["app-pool", "kube-system-pool"]
        steps:
        - scale_down_node_pool:
            try:
              call: googleapis.container.v1.projects.locations.clusters.nodePools.setSize
              args:
                name: $${"projects/"+project_id+"/locations/"+region+"/clusters/"+cluster_id+"/nodePools/"+node_pool_value}
                body:
                  nodeCount: $${scale_down_size}
              result: scale_down_node_pool
            except:
              as: e
              steps:
              - scale_down_workload_kube_dns:
                  call: gke.request
                  args:
                    project: $${project_id}
                    location: $${region}
                    cluster_id: $${cluster_id}
                    method: "PATCH"
                    path: "/apis/apps/v1/namespaces/kube-system/deployments/kube-dns/scale"
                    headers:
                      Content-Type: application/strategic-merge-patch+json
                    body:
                      spec:
                        replicas: $${scale_down_size}
                  result: scale_down_workload_kube_dns

prod_app_1_scaledown:
  params:
    - project_id: prd-little-quest
    - region: "us-central1"
    - cluster_id: "prod-app-1"
    - scale_down_size: 0
  steps:
  - disable_autoscaling_loop:
      for:
        value: node_pool_value
        in: ["app-pool", "kube-system-pool"]
        steps:
        - disable_autoscaling:
            call: googleapis.container.v1.projects.locations.clusters.nodePools.setAutoscaling
            args:
              name: $${"projects/"+project_id+"/locations/"+region+"/clusters/"+cluster_id+"/nodePools/"+node_pool_value}
              body:
                autoscaling:
                  enabled: false
            result: disable_autoscaling
  - wait:
      call: sys.sleep
      args:
        seconds: 180
  - scale_down_workload_little_quest_server:
      call: gke.request
      args:
        project: $${project_id}
        location: $${region}
        cluster_id: $${cluster_id}
        method: "PATCH"
        path: "/apis/apps/v1/namespaces/little-quest-server/deployments/little-quest-server/scale"
        headers:
          Content-Type: application/strategic-merge-patch+json
        body:
          spec:
            replicas: $${scale_down_size}
      result: scale_down_workload_little_quest_server
  - scale_down_workload_otel_collector:
      call: gke.request
      args:
        project: $${project_id}
        location: $${region}
        cluster_id: $${cluster_id}
        method: "PATCH"
        path: "/apis/apps/v1/namespaces/tracing/deployments/opentelemetry-collector/scale"
        headers:
          Content-Type: application/strategic-merge-patch+json
        body:
          spec:
            replicas: $${scale_down_size}
      result: scale_down_workload_otel_collector
  - scale_down_node_pool_loop:
      for:
        value: node_pool_value
        in: ["app-pool", "kube-system-pool"]
        steps:
        - scale_down_node_pool:
            try:
              call: googleapis.container.v1.projects.locations.clusters.nodePools.setSize
              args:
                name: $${"projects/"+project_id+"/locations/"+region+"/clusters/"+cluster_id+"/nodePools/"+node_pool_value}
                body:
                  nodeCount: $${scale_down_size}
              result: scale_down_node_pool
            except:
              as: e
              steps:
              - scale_down_workload_kube_dns:
                  call: gke.request
                  args:
                    project: $${project_id}
                    location: $${region}
                    cluster_id: $${cluster_id}
                    method: "PATCH"
                    path: "/apis/apps/v1/namespaces/kube-system/deployments/kube-dns/scale"
                    headers:
                      Content-Type: application/strategic-merge-patch+json
                    body:
                      spec:
                        replicas: $${scale_down_size}
                  result: scale_down_workload_kube_dns

prod_corp_0_scaledown:
  params:
    - project_id: prd-little-quest
    - region: "asia-northeast1"
    - cluster_id: "prod-corp-0"
    - scale_down_size: 0
  steps:
  - disable_autoscaling_loop:
      for:
        value: node_pool_value
        in: ["open-match-pool", "kube-system-pool"]
        steps:
        - disable_autoscaling:
            call: googleapis.container.v1.projects.locations.clusters.nodePools.setAutoscaling
            args:
              name: $${"projects/"+project_id+"/locations/"+region+"/clusters/"+cluster_id+"/nodePools/"+node_pool_value}
              body:
                autoscaling:
                  enabled: false
            result: disable_autoscaling
  - wait:
      call: sys.sleep
      args:
        seconds: 180
  - scale_down_little_quest_workload_loop:
      for:
        value: workload_value
        in: ["little-quest-director", "little-quest-frontend", "little-quest-mmf"]
        steps:
        - scale_down_little_quest_workload:
            call: gke.request
            args:
              project: $${project_id}
              location: $${region}
              cluster_id: $${cluster_id}
              method: "PATCH"
              path: $${"/apis/apps/v1/namespaces/corp-0/deployments/"+workload_value+"/scale"}
              headers:
                Content-Type: application/strategic-merge-patch+json
              body:
                spec:
                  replicas: $${scale_down_size}
            result: scale_down_little_quest_workload
  - scale_down_agones_workload_loop:
      for:
        value: workload_value
        in: ["agones-allocator", "agones-controller", "agones-extensions"]
        steps:
        - scale_down_agones_workload:
            call: gke.request
            args:
              project: $${project_id}
              location: $${region}
              cluster_id: $${cluster_id}
              method: "PATCH"
              path: $${"/apis/apps/v1/namespaces/agones-system/deployments/"+workload_value+"/scale"}
              headers:
                Content-Type: application/strategic-merge-patch+json
              body:
                spec:
                  replicas: $${scale_down_size}
            result: scale_down_agones_workload
  - scale_down_workload_otel_collector:
      call: gke.request
      args:
        project: $${project_id}
        location: $${region}
        cluster_id: $${cluster_id}
        method: "PATCH"
        path: "/apis/apps/v1/namespaces/tracing/deployments/opentelemetry-collector/scale"
        headers:
          Content-Type: application/strategic-merge-patch+json
        body:
          spec:
            replicas: $${scale_down_size}
      result: scale_down_workload_otel_collector
  - scale_down_node_pool_loop:
      for:
        value: node_pool_value
        in: ["open-match-pool", "kube-system-pool"]
        steps:
        - scale_down_node_pool:
            try:
              call: googleapis.container.v1.projects.locations.clusters.nodePools.setSize
              args:
                name: $${"projects/"+project_id+"/locations/"+region+"/clusters/"+cluster_id+"/nodePools/"+node_pool_value}
                body:
                  nodeCount: $${scale_down_size}
              result: scale_down_node_pool
            except:
              as: e
              steps:
              - scale_down_workload_kube_dns:
                  call: gke.request
                  args:
                    project: $${project_id}
                    location: $${region}
                    cluster_id: $${cluster_id}
                    method: "PATCH"
                    path: "/apis/apps/v1/namespaces/kube-system/deployments/kube-dns/scale"
                    headers:
                      Content-Type: application/strategic-merge-patch+json
                    body:
                      spec:
                        replicas: $${scale_down_size}
                  result: scale_down_workload_kube_dns

prod_misc_0_scaledown:
  params:
    - project_id: prd-little-quest
    - zone: "asia-northeast1-a"
    - cluster_id: "prod-misc-0"
    - scale_down_size: 0
  steps:
  - disable_autoscaling_loop:
      for:
        value: node_pool_value
        in: ["argocd-pool", "kube-system-pool"]
        steps:
        - disable_autoscaling:
            call: googleapis.container.v1.projects.zones.clusters.nodePools.autoscaling
            args:
              projectId: $${project_id}
              zone: $${zone}
              clusterId: $${cluster_id}
              nodePoolId: $${node_pool_value}
              body:
                name: projects/$${project_id}/locations/$${zone}/clusters/$${cluster_id}/nodePools/$${node_pool_value}
                autoscaling:
                  enabled: false
            result: disable_autoscaling
  - wait:
      call: sys.sleep
      args:
        seconds: 60
  - scale_down_node_pool_loop:
      for:
        value: node_pool_value
        in: ["argocd-pool", "kube-system-pool"]
        steps:
        - scale_down_node_pool:
            call: googleapis.container.v1.projects.zones.clusters.nodePools.setSize
            args:
              projectId: $${project_id}
              zone: $${zone}
              clusterId: $${cluster_id}
              nodePoolId: $${node_pool_value}
              body:
                name: projects/$${project_id}/locations/$${zone}/clusters/$${cluster_id}/nodePools/$${node_pool_value}
                nodeCount: $${scale_down_size}
            result: scale_down_node_pool
