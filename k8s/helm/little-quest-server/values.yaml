# Default values for little-quest-server.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

serviceName: little-quest-server

image:
  repository: asia-northeast1-docker.pkg.dev/kentaiso-330205/little-quest/little-quest-server
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

migrate: false

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

strategy: {}

# Pod's containerPort
containerPort: 8080

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

liveness:
  httpGet:
    path: /healthz
    port: http
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 5
  timeoutSeconds: 10

readiness:
  httpGet:
    path: /readiness
    port: http
  periodSeconds: 10
  successThreshold: 1
  failureThreshold: 5
  timeoutSeconds: 10

startup: {}

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  requests:
    cpu: 100m
    memory: 128Mi
  limits:
    cpu: 100m
    memory: 128Mi

## Cloud SQL Proxy sidecar
cloudSqlProxy:
  enabled: false
  image:
    repository: gcr.io/cloud-sql-connectors/cloud-sql-proxy
    tag: 2.2.0
  args:
  - "--structured-logs"
  - "--private-ip"
  - "--port=3306"
  - "<INSTANCE_CONNECTION_NAME>"

  containerPort: 9090

  securityContext:
    # The default Cloud SQL Auth Proxy image runs as the
    # "nonroot" user and group (uid: 65532) by default.
    runAsNonRoot: true

  liveness:
    httpGet:
      path: /liveness
      port: 9090
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 5
    timeoutSeconds: 10

  readiness:
    httpGet:
      path: /readiness
      port: 9090
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 5
    timeoutSeconds: 10

  startup:
    httpGet:
      path: /startup
      port: 9090
    periodSeconds: 10
    initialDelaySeconds: 3
    successThreshold: 1
    failureThreshold: 5
    timeoutSeconds: 10 
 
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 100m
      memory: 100Mi

nodeSelector: {}

tolerations: []

affinity: {}

topologySpreadConstraints: {}

terminationGracePeriodSeconds: 30

## Additional volumeMounts
volumeMounts: {}

## Additional Volumes
volumes: {}

maxUnavailable: 1

service:
  annotations: {}
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  className: ""
  annotations: {}
  hosts:
    - host: example.com
      paths:
        - path: /*
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local
  
  managedCertificate:
    enabled: false
    domains: []

  backendConfig:
    enabled: false
    spec: {}

  frontendConfig:
    enabled: false
    spec: {}

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUType: Utilization
  targetCPUUtilizationPercentage: 70
  # targetMemoryType: Utilization
  # targetMemoryUtilizationPercentage: 70

secret:
  annotations: {}

# environment(e.g. development, staging, production)
env: development

# Time Zone
timeZone: Asia/Tokyo

# Google Cloud ProjectId
googleCloudProjectId: test-project

# Cloud Trace sampling rate
cloudTrace:
  samplingRate: 0.1

# Cloud Spanner info
spanner:
  instance: dev-spanner-instance
  database: user_data

# MySQL info
mysql:
  host: mysql
  port: 3306
  dbName: master_data
  userName: default

# Redis info
redis:
  host: redis
  port: 6379
  dbNumber: 0

agones:
  allocator:
    host: agones-allocator.agones-system.svc.cluster.local.
